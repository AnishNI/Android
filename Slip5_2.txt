2.   Create an Android application which will ask the user to input his / her name. 
A message should display the two items concatenated in a label. Change the format 
of the label using radio buttons and check boxes for selection. The user can make 
the label text bold, underlined or italic as well as change its color. Also include 
buttons to display the message in the label, clear the text boxes as well as label. 
Finally exit.



1. Layout File (activity_main.xml):



XML
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/user_name_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter your name" />

    <TextView
        android:id="@+id/greeting_label"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Formatting options:" />

    <RadioGroup
        android:id="@+id/format_radio_group"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content">

        <RadioButton
            android:id="@+id/radio_normal"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Normal"
            android:checked="true" />

        <RadioButton
            android:id="@+id/radio_bold"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Bold" />

        <RadioButton
            android:id="@+id/radio_italic"
            android:layout_width="wrap_content"
            android.layout.height="wrap_content"
            android:text="Italic" />

        <RadioButton
            android:id="@+id/radio_underline"
            android:layout_width="wrap_content"
            android.layout.height="wrap_content"
            android:text="Underline" />
    </RadioGroup>

    <CheckBox
        android:id="@+id/checkbox_color"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Change Color" />

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <Button
            android:id="@+id/button_show"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Show Message" />

        <Button
            android:id="@+id/button_clear"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Clear" />

        <Button
            android:id="@+id/button_exit"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Exit" />
    </LinearLayout>

</LinearLayout>


2. Activity Class (MainActivity.java):


Java
public class MainActivity extends AppCompatActivity {

    private EditText userNameInput;
    private TextView greetingLabel;
    private RadioGroup formatRadioGroup;
    private CheckBox colorCheckbox;
    private Button showButton, clearButton, exitButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        userNameInput = findViewById(R.id.user_name_input);
        greetingLabel = findViewById(R.id.greeting_label);
        formatRadioGroup = findViewById(R.id.format_radio_group);
        colorCheckbox = findViewById(R.id.checkbox_color);
        showButton = findViewById(R.id.button_show);
        clearButton = findViewById(R.id.button_clear);
        exitButton = findViewById(R.id.button_exit);

        showButton.setOnClickListener(v -> showMessage());
        clearButton.setOnClickListener(v -> clearInput());
        exitButton.set
