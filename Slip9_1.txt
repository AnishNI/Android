Create an application that allows the user to enter a number in the textbox named „getnum‟. Check whether the number in the textbox „getnum‟ is Palindrome or not. Print the message accordingly in the label when the user clicks on the button „Check‟.





Sure! Below is an example of an Android application that allows the user to enter a number in a EditText named "getnum", checks whether the entered number is a palindrome or not, and displays the result in a TextView when the user clicks on a Button named "Check":

Layout XML file (activity_main.xml):
xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".MainActivity"> <EditText android:id="@+id/getnum" android:layout_width="wrap_content" android:layout_height="wrap_content" android:hint="Enter a number" android:inputType="number" app:layout_constraintBottom_toTopOf="@id/checkButton" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintStart_toStartOf="parent" app:layout_constraintTop_toTopOf="parent" /> <Button android:id="@+id/checkButton" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Check" app:layout_constraintBottom_toTopOf="@id/resultTextView" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintStart_toStartOf="parent" /> <TextView android:id="@+id/resultTextView" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="" android:textSize="20sp" app:layout_constraintBottom_toBottomOf="parent" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintStart_toStartOf="parent" app:layout_constraintTop_toBottomOf="@id/checkButton" /> </androidx.constraintlayout.widget.ConstraintLayout>
Java code for the main activity (MainActivity.java):
java

import android.os.Bundle; import android.text.Editable; import android.text.TextUtils; import android.text.TextWatcher; import android.view.View; import android.widget.Button; import android.widget.EditText; import android.widget.TextView; import androidx.appcompat.app.AppCompatActivity; public class MainActivity extends AppCompatActivity { EditText getnum; Button checkButton; TextView resultTextView; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); getnum = findViewById(R.id.getnum); checkButton = findViewById(R.id.checkButton); resultTextView = findViewById(R.id.resultTextView); checkButton.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { checkPalindrome(); } }); // Add a TextWatcher to check if the input changes getnum.addTextChangedListener(new TextWatcher() { @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {} @Override public void onTextChanged(CharSequence s, int start, int before, int count) { // Clear the result text view when the input changes resultTextView.setText(""); } @Override public void afterTextChanged(Editable s) {} }); } private void checkPalindrome() { String input = getnum.getText().toString().trim(); if (!TextUtils.isEmpty(input)) { int number = Integer.parseInt(input); if (isPalindrome(number)) { resultTextView.setText(number + " is a palindrome"); } else { resultTextView.setText(number + " is not a palindrome"); } } else { resultTextView.setText("Please enter a number"); } } // Function to check if a number is palindrome or not private boolean isPalindrome(int num) { int originalNum = num; int reversedNum = 0; while (num != 0) { int digit = num % 10; reversedNum = reversedNum * 10 + digit; num /= 10; } return originalNum == reversedNum; } }
